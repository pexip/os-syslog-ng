From 985493792b575128144007a2f8237dada7deb0bc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Gerg=C5=91=20Nagy?= <gergo.nagy@balabit.com>
Date: Thu, 21 May 2015 11:52:13 +0200
Subject: [PATCH] afsocket: initialization phase was refactored. If the host
 cannot be connected during the initialization of `afsocket` destination and
 it is possible that it can be done later then we will retry it periodically
 scheduled by `time-reopen`.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This patch was written in pair with @dnsjts

Signed-off-by: Gerg≈ë Nagy <gergo.nagy@balabit.com>
---
 modules/afsocket/afsocket-dest.c | 44 ++++++++++++++++++++++++++++++++++------
 modules/afsocket/afsocket-dest.h |  1 +
 2 files changed, 39 insertions(+), 6 deletions(-)

diff --git a/modules/afsocket/afsocket-dest.c b/modules/afsocket/afsocket-dest.c
index 0df1787..6f9cba9 100644
--- a/modules/afsocket/afsocket-dest.c
+++ b/modules/afsocket/afsocket-dest.c
@@ -65,6 +65,8 @@ afsocket_dd_stats_instance(AFSocketDestDriver *self)
 
 static gboolean afsocket_dd_connected(AFSocketDestDriver *self);
 static void afsocket_dd_reconnect(AFSocketDestDriver *self);
+static void afsocket_dd_try_connect(AFSocketDestDriver *self);
+static gboolean afsocket_dd_setup_connection(AFSocketDestDriver *self);
 
 static void
 afsocket_dd_init_watches(AFSocketDestDriver *self)
@@ -75,7 +77,10 @@ afsocket_dd_init_watches(AFSocketDestDriver *self)
 
   IV_TIMER_INIT(&self->reconnect_timer);
   self->reconnect_timer.cookie = self;
-  self->reconnect_timer.handler = (void (*)(void *)) afsocket_dd_reconnect;
+  /* Using reinit as a handler before establishing the first successful connection.
+   * We'll change this to afsocket_dd_reconnect when the initialization of the
+   * connection succeeds.*/
+  self->reconnect_timer.handler = (void (*)(void *)) afsocket_dd_try_connect;
 }
 
 static void
@@ -238,6 +243,21 @@ afsocket_dd_reconnect(AFSocketDestDriver *self)
     }
 }
 
+static void
+afsocket_dd_try_connect(AFSocketDestDriver *self)
+{
+  if (!afsocket_dd_setup_addresses(self) ||
+      !afsocket_dd_setup_connection(self))
+    {
+      msg_error("Initiating connection failed, reconnecting",
+                evt_tag_int("time_reopen", self->time_reopen),
+                NULL);
+      afsocket_dd_start_reconnect_timer(self);
+      return;
+    }
+  self->reconnect_timer.handler = (void (*)(void *)) afsocket_dd_reconnect;
+}
+
 static gboolean
 afsocket_dd_setup_proto_factory(AFSocketDestDriver *self)
 {
@@ -348,6 +368,8 @@ afsocket_dd_setup_connection(AFSocketDestDriver *self)
 
   if (!log_writer_opened(self->writer))
     afsocket_dd_reconnect(self);
+
+  self->connection_initialized = TRUE;
   return TRUE;
 }
 
@@ -355,11 +377,18 @@ gboolean
 afsocket_dd_init(LogPipe *s)
 {
   AFSocketDestDriver *self = (AFSocketDestDriver *) s;
+  GlobalConfig *cfg = log_pipe_get_config(&self->super.super.super);
+
+  if (!log_dest_driver_init_method(s) ||
+      !afsocket_dd_setup_transport(self))
+    {
+      return FALSE;
+    }
 
-  return log_dest_driver_init_method(s) &&
-         afsocket_dd_setup_transport(self) &&
-         afsocket_dd_setup_addresses(self) &&
-         afsocket_dd_setup_connection(self);
+  self->time_reopen = cfg->time_reopen;
+
+  afsocket_dd_try_connect(self);
+  return TRUE;
 }
 
 static void
@@ -388,7 +417,11 @@ afsocket_dd_deinit(LogPipe *s)
 
   afsocket_dd_stop_watches(self);
   afsocket_dd_stop_writer(self);
-  afsocket_dd_save_connection(self);
+
+  if (self->connection_initialized)
+    {
+      afsocket_dd_save_connection(self);
+    }
 
   return log_dest_driver_deinit_method(s);
 }
@@ -449,6 +482,7 @@ afsocket_dd_init_instance(AFSocketDestDriver *self,
   self->transport_mapper = transport_mapper;
   self->socket_options = socket_options;
   self->connections_kept_alive_accross_reloads = TRUE;
+  self->connection_initialized = FALSE;
 
 
   self->writer_options.mark_mode = MM_GLOBAL;
diff --git a/modules/afsocket/afsocket-dest.h b/modules/afsocket/afsocket-dest.h
index 661fb1c..4b4b835 100644
--- a/modules/afsocket/afsocket-dest.h
+++ b/modules/afsocket/afsocket-dest.h
@@ -48,6 +48,7 @@ struct _AFSocketDestDriver
   GSockAddr *bind_addr;
   GSockAddr *dest_addr;
   gint time_reopen;
+  gboolean connection_initialized;
   struct iv_fd connect_fd;
   struct iv_timer reconnect_timer;
   SocketOptions *socket_options;
