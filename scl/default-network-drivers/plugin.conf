#############################################################################
# Copyright (c) 2017 Balazs Scheidler
# Copyright (c) 2017 Balabit
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published
# by the Free Software Foundation, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# As an additional exemption you are allowed to compile & link against the
# OpenSSL libraries as published by the OpenSSL project. See the file
# COPYING for details.
#
#############################################################################

block source default-network-drivers(
	udp-port(514)
	tcp-port(514)
	rfc5424-tls-port(6514)
	rfc5424-tcp-port(601)
	log-msg-size(65536)
	flags("")
	tls("")
	hook-commands("")
	...) {

	channel {
		source {
			network(transport(tcp)
				port(`tcp-port`)
				log-msg-size(`log-msg-size`)
				flags(no-parse, `flags`)
				hook-commands(`hook-commands`));
			network(transport(udp)
				port(`udp-port`)
				log-msg-size(`log-msg-size`)
				flags(no-parse, `flags`));
		};
		if {
			parser { app-parser(topic(syslog-raw) `__VARARGS__`); };
		} else {
			parser { syslog-parser(flags(syslog-protocol)); };
			if {
				parser { ewmm-parser(); };
			}
			elif {
				parser { app-parser(topic(syslog) `__VARARGS__`); };
			}
			else {};
		};
	};


	channel {
		source {
			syslog(transport(tls) tls(`tls`)
			       port(`rfc5424-tls-port`)
			       flags(`flags`)
	                       log-msg-size(`log-msg-size`));
			syslog(transport(tcp)
			       port(`rfc5424-tcp-port`)
			       flags(`flags`)
	                       log-msg-size(`log-msg-size`));
		};
		if {
			parser { app-parser(topic(syslog) `__VARARGS__`); };
		};
	};
};
