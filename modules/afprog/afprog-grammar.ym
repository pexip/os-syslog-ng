/*
 * Copyright (c) 2002-2010 BalaBit IT Ltd, Budapest, Hungary
 * Copyright (c) 1998-2010 Bal√°zs Scheidler
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As an additional exemption you are allowed to compile & link against the
 * OpenSSL libraries as published by the OpenSSL project. See the file
 * COPYING for details.
 *
 */

%code top {
#include "afprog-parser.h"

}

%code {

#include "afprog.h"
#include "cfg-parser.h"
#include "afprog-grammar.h"
#include "syslog-names.h"
#include "messages.h"
#include "plugin.h"

#include <string.h>

}

%name-prefix "afprog_"

/* this parameter is needed in order to instruct bison to use a complete
 * argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogDriver **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_PROGRAM

%type   <ptr> source_afprogram
%type   <ptr> source_afprogram_params
%type   <ptr> dest_afprogram
%type   <ptr> dest_afprogram_params


%%

start
        : LL_CONTEXT_SOURCE source_afprogram                     { YYACCEPT; }
	| LL_CONTEXT_DESTINATION dest_afprogram			 { YYACCEPT; }
        ;

source_afprogram
	: KW_PROGRAM '(' source_afprogram_params ')' { $$ = $3; }
	;

source_afprogram_params
	: string
	  {
	    last_driver = *instance = afprogram_sd_new($1);
	    free($1);
	    last_reader_options = &((AFProgramSourceDriver *) last_driver)->reader_options;
	  }
	  source_reader_options			{ $$ = last_driver; }
	;

dest_afprogram
	: KW_PROGRAM '(' dest_afprogram_params ')' { $$ = $3; }
	;

dest_afprogram_params
	: string
	  {
	    last_driver = *instance = afprogram_dd_new($1);
	    free($1);
	    last_writer_options = &((AFProgramDestDriver *) last_driver)->writer_options;
	  }
	  dest_afprogram_options			{ $$ = last_driver; }
	;

dest_afprogram_options
	: dest_afprogram_option dest_afprogram_options
	|
	;

dest_afprogram_option
	: dest_writer_option
	| dest_driver_option
	;

/* INCLUDE_RULES */

%%
