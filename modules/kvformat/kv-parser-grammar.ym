/*
 * Copyright (c) 2015 Balabit
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As an additional exemption you are allowed to compile & link against the
 * OpenSSL libraries as published by the OpenSSL project. See the file
 * COPYING for details.
 */

%code top {
#include "kv-parser-parser.h"

}


%code {

#include "kv-parser.h"
#include "kv-parser-parser.h"
#include "linux-audit-parser.h"
#include "cfg-parser.h"
#include "kv-parser-grammar.h"
#include "cfg-grammar.h"

}

%name-prefix "kv_parser_"

/* this parameter is needed in order to instruct bison to use a complete
 * argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogParser **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_KV_PARSER
%token KW_LINUX_AUDIT_PARSER
%token KW_PREFIX
%token KW_VALUE_SEPARATOR
%token KW_PAIR_SEPARATOR
%token KW_EXTRACT_STRAY_WORDS_INTO
%token KW_ALLOW_PAIR_SEPARATOR_OPTION

%type	<ptr> parser_expr_kv

%%

start
	: LL_CONTEXT_PARSER parser_expr_kv                  { YYACCEPT; }
	;


parser_expr_kv
	: KW_KV_PARSER '('
	  {
	    last_parser = *instance = (LogParser *) kv_parser_new(configuration);
	  }
	  parser_kv_opts
	  ')'					{ $$ = last_parser; }
	| KW_LINUX_AUDIT_PARSER '('
	  {
	    last_parser = *instance = (LogParser *) linux_audit_parser_new(configuration);
	  }
	  parser_kv_opts
	  ')'					{ $$ = last_parser; }
	;

parser_kv_opts
	: parser_kv_opt parser_kv_opts
	|
	;

parser_kv_opt
	: KW_PREFIX '(' string ')'		{ kv_parser_set_prefix(last_parser, $3); free($3); }
	| KW_ALLOW_PAIR_SEPARATOR_OPTION '(' yesno ')'
	| KW_VALUE_SEPARATOR '(' string ')'
	  {
	    CHECK_ERROR((strlen($3) == 1), @3, "kv-parser() only supports single-character values for value-separator()");
	    CHECK_ERROR((kv_parser_is_valid_separator_character($3[0])), @3, "kv-parser() unsupported character for value-separator()");
            kv_parser_set_value_separator(last_parser, $3[0]);
            free($3);
	  }
	| KW_PAIR_SEPARATOR '(' string ')'
          {
            kv_parser_set_pair_separator(last_parser, $3);
            free($3);
          }
        | KW_EXTRACT_STRAY_WORDS_INTO '(' string ')'
          {
            kv_parser_set_stray_words_value_name(last_parser, $3);
            free($3);
          }
	| parser_opt
	;

/* INCLUDE_RULES */

%%
