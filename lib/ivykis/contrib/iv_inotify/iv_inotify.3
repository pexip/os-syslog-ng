.\" This man page is Copyright (C) 2009 Ronald Huizer.
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.TH iv_inotify 3 2009-02-07 "ivykis" "ivykis programmer's manual"
.SH NAME
iv_inotify \- an ivykis component for Linux inotify(7)
.SH SYNOPSIS
.nf
.B #include <iv.h>
.B #include <iv_inotify.h>
.sp
.BI "int iv_inotify_init(struct iv_inotify *"inotify ");
.BI "void iv_inotify_destroy(struct iv_inotify *"inotify ");

.BI "int iv_inotify_add_watch(struct iv_inotify *"inotify ",
.BI "                         struct iv_inotify_watch *"watch ");
.BI "int iv_inotify_rm_watch(struct iv_inotify *"inotify ",
.BI "                        struct iv_inotify_watch *"watch ");
.fi
.SH DESCRIPTION
The
.BR iv_inotify_init ()
function creates and initializes an
.BR iv_inotify
instance.  The
.I
inotify
parameter is a pointer to an
.BR iv_inotify
structure which will describe the instance once the function returns.
.PP
The
.BR iv_inotify_destroy ()
function destroys an
.BR iv_inotify
instance.  The
.I
inotify
parameter is a pointer to the
.BR iv_inotify
structure describing the instance
to be destroyed.
.PP
The
.BR iv_inotify_add_watch ()
function adds a watch to an
.BR iv_inotify
instance.  The
.I inotify
parameter is a pointer to this instance, and the
.I watch
parameter is the
.BR iv_inotify_watch
to add to this instance.
.PP
The
.BR iv_inotify_rm_watch ()
function removes a watch from an
.BR iv_inotify
instance.  The
.I inotify
parameter is a pointer to this instance, and the
.I watch
parameter is the
.BR iv_inotify_watch
to remove from this instance.
.PP
A special
.BR iv_inotify
NULL instance can be used which is created and
destroyed transparantly, so that calls to
.BR iv_inotify_init ()
and
.BR iv_inotify_destroy ()
can be omitted when only one iv_inotify instance is needed.

The
.BR iv_inotify_watch
structure used in these functions is as follows:

.in +4n
.nf
struct iv_inotify_watch {
    const char       *pathname;
    uint32_t         mask;
    void             (*handler)(struct inotify_event *, void *);
    void             *cookie;
};
.fi
.in

.I pathname
and
.I mask
correspond to the members of struct inotify_watch as described in
.BR inotify (7).
.I handler
is the event handler called when this watch would trigger.  The arguments
to this handler function are an inotify_event structure as described in
.BR inotify (7)
and the pointer stored in the
.I cookie
member of the iv_inotify_watch structure.

.SH "RETURN VALUE"
.BR iv_inotify_init (),
.BR iv_inotify_add_watch (),
and
.BR iv_inotify_rm_watch ()
return zero on success.  On error, -1 is returned, and errno is set
appropriately.

.SH "ERRORS"
iv_inotify will yield the errors generated by
.BR inotify_init (3),
.BR inotify_add_watch (3),
and
.BR inotify_rm_watch (3).
Additionally, when the NULL instance is used, iv_inotify will yield
.BR EINVAL
when
.BR iv_inotify_rm_watch
is called when the NULL instance has not yet been initialized (this
happens when there are no watches associated with the NULL instance).

.SH "SEE ALSO"
.BR ivykis (3)
.BR inotify (7)
.BR inotify_init (3)
.BR inotify_add_watch (3)
.BR inotify_rm_watch (3)
